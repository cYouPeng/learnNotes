二十七，代码块
	我们的程序是由一条一条语句构成的
		语句是按照自上向下的顺序一条一条执行的
		在js中可以使用{}来为语句进行分组
			同一个{}中的语句我们称为是一组语句
			它们要么都执行，要么都不执行
			一个{}中的语句我们也称为一个代码块
			在代码块的后边就不用再写 ";" 了
		js中的代码块，只具有分组的作用，没有其他的用途
			代码块内部的内容，在外部是完全可见的
				{
					var a = 10;
					console.log("hahahaa");
				}
				console.log(a); //10
				
二十八，if语句(一)
	-js中的程序是从上到下一行一行执行的
	-通过流程控制语句可以控制程序的执行流程，使程序可以根据一定条件来选择执行
	-语句的分类：
		1，条件判断语句
		2，条件分支语句
		3，循环语句
		
	条件判断语句
		-使用条件判断语句可以在执行某个语句之前进行判断，如果条件成立才会执行语句，条件不成立则语句不执行
		-if语句
			-语法1：
				if(条件表达式){
					语句...
				}
				if语句在执行时，会先对条件表达式进行求值判断
				如果条件表达式的值为true，则执行if后的语句
				如果条件表达式的值为false，则不会执行if后的语句
					if语句只能控制紧随其后的那个语句
						如果希望if语句可以控制多条语句，可以将这些语句统一放到代码块中
					if语句后的代码块不是必需的，但是在开发中尽量写上代码块，即使if后只有一条语句
	
二十九，if语句(二)
	语法2：
		if(条件表达式){
			语句...
		}else{
			语句...
		}
		if...else...语句
			当该语句执行时，会先对if后的条件表达式进行求值判断
				如果该值为true，则执行if后的语句
				如果该值为false，则执行else后的语句
				
	语法3：
		if(条件表达式){
			语句...
		}else if(条件表达式){
			语句...
		}else if(条件表达式){
			语句...
		}else {
			语句...
		}
		if...else if...else语句
			当该语句执行时，会从上到下依次对条件表达式进行求值判断
				如果该值为true，则执行当前语句
				如果该值为false，则继续向下判断
				如果所有条件都不满足，则执行最后一个else后的语句
				该语句中只会有一个代码块被执行，一旦代码块执行了，则直接结束语句
				
三十，三十一，三十二，练习
	prompt()可以弹出一个提示框，该提示框会带有一个文本框，用户可以在文本框中输入一段内容，该函数需要一个字符串作为参数
		该字符串将会作为提示框的提示文字
		用户输入的内容将会作为函数的返回值返回，可以定义一个变量来接收该内容
		该函数的返回值是String类型的
		
		var score = prompt("请输入");  //typeof score  => string
		var a = +prompt("请输入");  //直接把函数的返回值转成Number
		
		[注]var a = 20;
			if(a = 10){
				alert();  //依然执行，此时相当于if(10)
			}