一，[js简介]

二，js的helloworld

三，js编写位置
	1,可以将js代码写到标签的onClick属性中
		<button onClick="alert('hello');">点我一下</button>
	2,也可以写在超链接的href属性中
		<a href="javascript: alert('hello');"></a>
		<a href="javascript:;"></a>希望超链接没有反应
	  虽然可以这么写，但是他们属于结构与行为耦合，不方便维护，不推荐使用
	
	3,可以将js代码写到<script>标签中
	4,也可以<script src="1.js"></script>引入外部js文件，可以在不同页面中同时引用，也可以利用到浏览器的缓存机制，推荐使用。
	  <script>标签一旦用于引入外部文件了，就不能再编写代码了，即使编写了浏览器也会忽略。如果需要则可以再创建一个新的<script>
	  标签用于编写内部代码

四，基本语法
	1,/*
		多行注释，注释中的内容不会被执行，但是可以在源码中查看
	  */
	
	  // 单行注释
	  要养成良好的编写注释的习惯，也可以通过注释对代码进行一些简单的调试。
	2,js中严格区分大小写   
		-Alert("hello"); => Alert is not defined
	  html不区分大小写 
		-<a></A> => 是允许的
	3,js中每一条语句以(;)结尾
		-如果不写分号，浏览器会自动添加，但是会消耗一些资源。而且有些时候浏览器会加错分号，所以在开发中分好必须写。
	4,js中会忽略多个空格和换行，所以我们可以利用空格和换行对待吗进行格式化
		-alert
			(
				"hello"
			);           //也可以执行，但不能这么写，只是举个例子
			
五，字面量和变量
	1,字面量都是一些不可以改变的值
		比如: 1 2 3 "hello" true null Infinity undefined
	  字面量都是可以直接使用，但是我们一般都不会直接使用字面量
	2,变量可以用来保存字面量，而且变量的值可以任意改变，变量更加方便我们使用，所有在开发中都是通过变量去保存字面量，
	  而很少直接使用字面量
	  
	  在js中使用var关键字声明变量
		var a;
		//为变量赋值
		a = 123;
		//声明和赋值同时进行
		var b = 123;
		var age = 18;  //可以通过变量对字面量进行描述
六，标识符
	在js中所有的可以由我们自主命名的都可以称为标识符，例如：变量名、函数名、属性名都属于标识符
	命名一个标识符时需要遵守如下规则
		1,标识符中可以含有字母、数字、_、$
			var a_1_$ = 123;  //允许
		2,标识符不能以数字开头，其它3个都行
			var 2abc = 123;  //不允许
		3,标识符不能是es中的关键字或保留字
			var var = 123;  ///不允许
		4,标识符一般都采用驼峰命名法(规范，不强制)
			-第一个单词首字母小写，从第二个单词开始首字母大写，其余全小写  sayHello
		js底层保存标识符时实际上是采用的unicode编码，所以理论上讲，所有的utf-8中含有的内容都可以作为标识符
			var 锄禾日当午 = 789;  //可以输出789,但不能这么写

七，数据类型
	数据类型指的就是字面量的类型
	在js中一共有六种数据类型
		String 字符串        //描述一个类型，都是首字母大写
		Number 数值
		Boolean 布尔值
		Null 空值
		Undefined 未定义
		Object 对象
	其中String,Number,Boolean,Null,Undefined属于基本数据类型
	而Object属于引用数据类型
	
	String 字符串
		-在js中字符串需要使用引号引起来
			var str = "hello";  //把hello这个字符串赋值给str这个变量，现在str可以说就是一个字符串
		-使用双引号或单引号都可以，没啥区别，但不要混着用
			var str = 'hello";  //不允许
		-引号不能嵌套，双引号不能放双引号，单引号不能放单引号
			var str = '我说："今天天气不错"';  //允许
		在字符串中可以使用\作为转移字符，当表示一些特殊符号时可以使用\进行转义
			str = "我说：\"天气不错\"";  //允许
			\" 表示"
			\' 表示'
			\n 表示换行
			\t 制表符
			\\ 表示\
			\\\\ 表示\\
			
		//输出字面量，字符串str
			alert("str");
		//输出变量str
			alert(str);
			
八，Number类型
	在js中所有的数值都是Number类型，包括整数和浮点数(小数)
		//数字123
			var a = 123;
		//字符串123
			var b = "123";
	可以使用typeof运算符来检查一个变量的类型
		语法：typeof 变量名
			console.log(typeof a);
		检查字符串时,会返回string
		检查数值时,会返回number  (都是小写的)
	js中可以表示的数字的最大值
		Number.MAX_VALUE    => 1.7976931348623157e+308
	如果使用Number表示的数字超过了最大值，则返回一个Infinity，表示正无穷    console.log(Number.MAX_VALUE * 100000); => Infinity
		a = Infinity; //不要加引号，Infinity就是一个字面量
	使用typeof检查Infinity也会返回Number
	Infinity 表示正无穷
	-Infinity 表示负无穷
	
	Number.MIN_VALUE 表示大于0的最小值  =>5e-324
	
	console.log("abc" * "def"); => NaN
	NaN是一个特殊的数字，表示Not A Number
	a = NAN;   NAN和Infinity一样，也是个字面量，不要加引号
	typeof检查NaN也会返回number
	
	在js中整数的运算基本可以保证精确
		var c = 123 + 456; => 579
	如果使用js进行浮点，可能得到一个不精确的结果，所以千万不要使用js进行对精确度要求比较高的运算
		var c = 0.1 + 0.2; => 0.30000000000000004
		
九，布尔值
	Boolean的值只有两个，主要用来做逻辑判断
		true -表示真
		false - 表示假
	var bool = true;
	使用typeof检查一个布尔值时，会返回boolean
十，Null和Undefined
	Null(空值)类型的值只有一个就是null(小写的)
		var a = null;
		null这个值专门用来表示一个为空的对象
		使用typeof检查一个null值时，会返回object
	
	Undefined(未定义)类型的值只有一个就是undefined
	当声明一个变量，但是并不给变量赋值时，它的值就是undefined
	使用typeof检查一个undefined值时，会返回undefined
	
	未定义不代表没有声明，是声明了但没有赋值
		var b;
		console.log(b);  => undefined
		但去掉 var b; 则报错 b is not defined















	
