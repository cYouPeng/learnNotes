标签里的属性如果不是data里的，就有可能是computed(计算属性)里的

css样式放到vue里用驼峰命名法(组件除外) font-size -> fontSize

重要组成部分：组件  路由
全局组件：绑定给vue类
局部组件：绑定给vue对象

通过props可以从父属性向子属性传值
组件的数据传递，只能由父组件传给子组件，反之不行

template里有多个标签要统一放在一个根元素里

模板也可以放在html页面里，但<template></template>不能作为根元素

组件名不能用驼峰命名，或不能有大写字母

观察者模式：对象变了，不会观察到；对象属性变了，才会观察到，所以在data里要多加一层

data:{
	res:{
		moments:moments,  //为什么要多放一层res呢？如果直接放moments，这样如果我们把mements
			//所指向的数组给改变，与其所绑定的html内容是不会有什么变化的；什么时候会改变呢？改变它所
			//指向的数组或其它数据里边的内容改变，这样html内容也会改变，所以要多放一层res，这样即使
			//我们改变moments所指向的数组，html也会相应变化
		loginUser:{}
	}
}

html里可以用-  js里不能用
props里的属性值如果有大写字母，那么我们在html里调用组件的时候给该属性传值，在写这个属性名的时候，要在每个大写字母前边加上- 这时因为html不区分大小写，他无法辨别你写的是message还是messAGE或什么，所以要在每个大写字母前加-，以表明-后边的字母是大写的，只要有-，不管后边你写的是大写还是小写，都认为是大写，仅限于在调用组件时，给属性赋值时需要这么做，因为此时是在html里，而在<template>里不必这么做，因为最终还是属于js页面的
例：Vue.component('mycomponent',{
	template: '<div>这是一个自定义组件,父组件传给我的内容是：{{messAGE1}}</div>',
	props: {messAGE1:String},

    <div id="app">
	<mycomponent mess-A-G-E1="hello"></mycomponent>
    </div>   可以在调用组件的时候同时给属性赋值

data的使用  有时我们需要在组件中包含一些自定义的数据可以这样做
Vue.component("cpt",{
    
	template:"<div>{{someText}}</div>"
,
	data:function(){
        
	     return {
            
		  someText:"text"
        
	     }
   
 }
});

props: ['childArray'] / 'childArray':Array  都可以
上传json只能用post

不能在当前组件中跳转当前组件
router-link中不能设置事件

<select v-model="sel">
	<option value=1>fff</option>
	<option value=2>ddd</option>
	<option value=3>qqq</option>
	<option value=4>eee</option>
</select>   select可以实现双向绑定，option不可以，这个双向绑定的值，就是你所选择的option的value的值，可以根据这个特点，在进行axios的时候，可以发送所选类型的值，