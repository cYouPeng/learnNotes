127.0.0.1 或localhost 代表本机
2的16次幂是65535

80端口是唯一可以省略的端口，是默认的

不管是客户端还是服务器端，输入输出流的创建顺序必须和下面接收发送数据的顺序一样，也就是说如果你先发送数据再读取数据，那创建流的时候，就得是先创建输出流，再创建输入流

ipconfig 查看ip
ping  默认发4个包
      加-t 就会一直发包  按ctrl+c结束
网不好，可能是传输过程中丢失了数据包，然后还要重传

TCP:对即时性要求不高，但稳定性要求较高
UDP:对即时性要求较高，但稳定性要求不高

TCP:字节流，有连接， 安全的，稳定的
UDP:数据报，无连接， 不安全的，不稳定的

物理地址(MAC)每一块网卡都有自己的MAC地址，出厂时就指定了MAC地址
IP是逻辑地址  MAC是物理地址
只要网络ID相同，就是一个子网

TCP：三次握手―>三次应答
URL:统一资源定位符--协议://ip:端口/服务名/资源名
最终解析：http://33.33.33.100:8000/MyServer/index.html

http报文结构
请求报文结构:
     1,请求行：a,请求方式  b,URI c,协议
     2,请求头： 名:值...
     3,空行
     4,请求体
请求行紧挨请求头，第一行一定是请求行，第二行一定是请求头

响应报文结构：
     1，状态行  协议(空格)状态码(空格)状态名
     2，响应头
     3，空行
     4，响应内容

提交的数据(不能有空格)：数据名=数据值 多个的话用&分隔,例，百度aaaa0 

服务器如何知道要搜索的是啥，根据wd后面的值
将来程序出错，一定要检查报文

get方式请求：数据在uri中且没有请求体，格式：URi?参数名=参数值&参数名1=参数值1... 请求行中只能出现两个空格，URI中不能有空格  ， URI长度不能超过255个字符，不能有中文


post方式的请求，数据在请求体中，参数名=参数值&参数名1=参数值1...

c/s 客户端/服务端  client/server
b/s 浏览器/服务器  browers/server312

Socket 实现客户端网络编程
ServerSocket实现服务器端网络编程

     客户端                   服务器端
 2，创建Socket对象，         1，创建ServerSocket对象监听指定接口
    连接服务端               4，得到Socket类型对象，代表建立了连接    
 3，发送请求报文             5，接收数据
 7，接收响应的报文           6，返回数据
 8，关闭    

对客户端来说 发送请求时 是输出流，接收响应 是输入流
对服务端来说 发送响应 是输出流 ，接收请求 是输入流

请求行三个参数用空格分割