参与运算的两个数据，类型要相同
(double)5/2   == 2.5
(double)(5/2)   ==2.0     浮点数相除不去小数

随机数：Math.random()   生成一个0到1之间的随机数     0<= double <1
        int(Math.random()*10)  生成0到9之间的随机数    0*10 <= Math.random()*10 < 1*10
		0*26+1 <=Math.random()*26+1 <1*26+1   生成1到26之间随机数
		
		
		
switch后面的表达式要求的数据类型有：String(1.8以后) int,short,byte,char
									long,double,float   这三个不可以
									
									
运算符优先级：括号>算术运算符(*,/,%大于+,-)>比较运算符(<,>,>=,<= 大于 ==,!=)>逻辑运算符(&&>||)
>赋值运算符(=是最低的)									
									
if和switch
相同点：都是用来处理多分支条件的结构
不同点：switch只能处理等值条件判断的
			if没有switch选择结构的限制，特别适合某个变量处于连续区间时的情况
			
			
密码不能用int ,因为不能表现出0000或0001这样的数字，所以要用String


循环结构的特点：循环条件，循环操作

1到100累加和5050

外层循环控制行(每一行); 内层循环控制列(每一行的内容)

定义二进制以数字0b开头  int a = 0b01110;
定义八进制以数字0开头   int b = 01234567;
定义十六进制以数字0x开头  int c = 0x3a3b8c;


byte 8位   short 16位   int  32位  long  64位
float  32位  double  64位  char  16位




十进制与八进制和十六进制之间的转换
八-->十；与二进制转十进制差不多：
按权相加法，即将八进制每位上的数乘以位权，然后将得出来的数再加在一起。
例：123 --> 1x8^2 + 2x8^1 + 3x8^0  ==83 

十-->八：短除法：除8一直到商为0；从下到上取余数   165(十) --> 245(八)

十进制与16进制的转换与8进制一样，只不过*8改为*16    除8改为除16

bit(b) byte(B)(字节) = 8b   容量以字节为单位 
1kB = 1024B
1MB = 1024KB
1GB = 1024MB
1TB = 1024GB

100Mbps和10MB/s  是不一样的

计算机系统中数都用补码表示    (原码的正0和负0是不一样的，而补码的就一样)
正数的原码、反码、补码相同
负数的原码、反码、补码不相同   

字符集：        unicode 无符号 2个字节 0-65535                                                                                                                                                               
	        iso-8859-1 西文字符集
		GBK/GB2312 简体中文字符集
		big5 繁体中文字符集

		128	64	32	16	8	4	2       1
11111111  --> 1*2^7 + 1*2^6 + 1*2^5 + 1*2^4 + 1*2^3 + 1*2^2 + 1*2^1 + 1*2^0  == 255    0到255共256个数字
01111111  --> 1*2^6 + 1*2^5 + 1*2^4 + 1*2^3 + 1*2^2 + 1*2^1 + 1*2^0  ==127             0到127共128个数字

		
如果当前程序出错，点击按钮启动可能会执行上一次成功执行的代码，此时点击run as是最靠谱的

Java源程序(.java文件) -编译-> 字节码文件(.class文件) -JVM解释->机器码文件(二进制文件)

char \u4F60   \u后跟4位16进制的unicode编码  可以直接以这种形式输出字符串   
char c ='\u0000'; 此为空字符 不能这么写 char c ='';

对char类型变量赋值，int型常量可以直接赋值，int型变量必须经过显式的类型转换才可以赋值
例：	int a = 98;
	char c = 98;
	char c1 = a; //错误，int型变量a必须显示转换才可赋給c1   char c1 = (char)a;
	
	
String s1 = "";  s1为空串
String s2 = null; s2为空       它俩是不一样的


先写字符串，再写双引号，再写两个+号  System.out.println("你吃了"+i+"个苹果");

for(char i='a';i<='z';i++) {
	System.out.print((char)i);
}                           可以输出a到z 26个字母  改成大写的就输出大写A到Z


int a = 'c';  可以直接把一个char型变量或常量赋給一个整型变量，输出为99

boolean[] b = new boolean[4];
System.out.println(b[3]);
可以创建布尔类型的数组，长度可以是多个，元素默认值false

	        double d = 5.9;
		int a =(int)d;
		System.out.println(a);         double强转成int，是直接舍弃掉小数位，而不是进行四舍五入

float类型赋給int类型，是需要进行显式转换的，虽然他们的表示范围都是一样的，但是float精度比int高

		int a = 1;
		a = a+1.5;   这样写会报错  Type mismatch: cannot convert from double to int
		a+=1.5;      但是这样写就不会报错

判断两个字符相等，可以直接用==

两个整数相除，只取整数(小数点左边)的部分，例如  99/100=0.99  取0

求一个数的整数部分和小数部分：
1。
float a = 3.14;
System.out.println("整数部分： "+(int)a);
System.out.println("小数部分： "+a%1)
2。将浮点数转成字符串，然后用.分割字符串，第一部分是整数，第二部分是小数。

从0到7是8个数  1到7是7个数   0-100是101个数  1到100是100个数