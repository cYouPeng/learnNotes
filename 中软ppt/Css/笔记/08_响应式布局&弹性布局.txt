响应式布局：基于媒体查询  它只是起到一个辅助作用
@media only screen and(空格)(min-width:800px){}
@media all and ()
注意，多个媒体查询之间不要结尾不要加分号；

响应式布局：在不同尺寸内改变html字号 宽度等都使用rem为单位

<meta name="viewport" content="width=device-width, initial-scale=1.0">  需要加上这段代码媒体查询才会生效

@media (min-width:768px)
@media (min-width:992px)
@media (min-width:1200px)   使用min-width时，小的放上面、大的放下面

@media (max-width:1200px)
@media (max-width:992px)
@media (max-width:768px)    使用max-width时，大的放上面、小的放下面

两种方式
a：

<link rel="stylesheet" type="text/css" href="styleB.css" media="screen and (min-width: 600px) and (max-width: 800px)">

意思是当屏幕的宽度大于600小于800时，应用styleB.css
b：

@media screen and (max-width: 600px) {  /当屏幕尺寸小于600px时，应用下面的CSS样式/
	.class {
	?    background: #ccc;
	}
}

device-aspect-ratio
device-aspect-ratio可以用来适配特定屏幕长宽比的设备，这也是一个很有用的属性，比如，我们的页面想要对长宽比为4:3的普通屏幕定义一种样式，然后对于16:9和16:10的宽屏，定义另一种样式，比如自适应宽度和固定宽度：

@media only screen and (device-aspect-ratio:4/3)