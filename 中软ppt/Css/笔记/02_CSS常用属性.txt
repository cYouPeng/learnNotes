长度单位：
  px(pixel)是相对单位，不同分辨率下一个像素的长度不同，分辨率越小，像素越大；分辨率大，像素越小

分辨率分为屏幕分辨率和图像分辨率，屏幕分辨率就是长和宽方向上各有多少个像素；图像分辨率就是每英寸有多少个像素

%是相对于父元素的长度的百分之几
有一点需要注意：html{
			font-size:100%;/* 此时相对于页面中文字默认尺寸的100%，而不是屏幕尺寸的100%*/
		}
rem相对于html元素尺寸
em相对于自身元素尺寸
网页中默认的字体大小是16px

font在简写的时候font:italic small-caps bold 12px/1.5em arial,verdana;
在font简写的时候，如果有line-height最好写在font里，如果单独写line-height则书写顺序必须在font后面，否则line-height无效。当然了，不简写的时候是无所谓的

颜色单位：
  以#开头后面必须跟16进制数，以rgb开头后必跟十进制
#000代表黑色   #FFF代表白色   中间相等值代表灰色  越接近0越黑
rgba(0,0,0,0.7)这个0.7代表透明度，0完全透明；1完全不透明

background-image:url(../images/bd.jpg); 如果引用方式为外部样式，其中的相对地址是相对于CSS文件所在位置

字体和文本的样式大多具有继承性
对em增加样式font-style:normal  此时em只有强调，没有倾斜。font-style只有单纯的倾斜

用了strong和em一定是因为该内容需要强调，以便爬虫抓取
font-weight的四个值：normal->100、bold->700、bold->900、lighter->100

text-align:left/center/right/justify   应用在块/行块中指定其内部的行/行块的水平对其方式
vertical-align:middle、top、bottom、长度或百分比(可为负值)
用来定义一个元素的垂直对齐方式(行内元素的基线相对于该元素所在行的基线的垂直对齐)
属性值：baseline(默认):元素在父元素的基线上
        数值：升高或降低元素
	百分比(%)：使用"line-height"属性的百分比值来排列此元素
	sub：垂直对齐文本的下标
	super：垂直对齐文本的上标
	top：把元素的顶端与行中最高元素的顶端对齐
	bottom：把元素的顶端与行中最低的元素的顶端对齐
	text-top：把元素的顶端与父元素字体的顶端对齐
	text-bottom：把元素的底端与父元素字体的底端对齐
	middle：把此元素放置在父元素的中部
	inherit：从父元素继承vertical-align属性值

	属性值 对齐方式
	baseline    元素基线与父元素基线对齐，默认值
	bottom  元素底部与父元素底部对齐
	top 元素顶部与父元素顶部对齐
	middle  元素中线与父元素中线对齐
	top 与父元素顶部对齐
	text-top    元素顶部与父元素文字顶部对齐
	text-bottom 元素顶部与父元素文字顶部对齐

图片的基线位置和文字的基线位置不一样
wrod-spacing 可以用空格来区分单词
text-indent:2em  尽量用em做单位  还有line-height

display:none 元素在页面中不存在，不占位置

background-repeat:repeat-y;
background-position:center;  此时图片在中心，以它向上/下展开平铺

可以把ul通过list-style-type变成有序表，所以HBuilder里没有有序表的快捷键