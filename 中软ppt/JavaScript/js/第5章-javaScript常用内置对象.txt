js中没有replaceAll()的方法，可以给正则加上全局匹配，也可以替换所有，或者是查找所有

支持正则表达式的 String 对象的方法
search(rgExp)  无论正则是不是全局匹配，都只返回第一次匹配到子串的位置(匹配到的子串是多个字符，返回的是第一个字符的位置)
match(rgExp)	正则不加全局匹配，只返回第一次匹配到的子串，加了，返回全部匹配到的子串，返回一个数组。

search和match里也可以是个字符串

search(regExp)和indexOf(substr,index)的区别：
	相同点：都是返回子串在字符串中第一次出现的位置
	不同：search支持正则，indexOf()不支持;search()没有第二个参数，indexOf有

replace(rgExp,str) 正则不加全局匹配，只替换第一次匹配到的子串，加了，替换所有匹配到的子串，返回一个字符串

str.split(separator,howmany)  "1a2a3" 根据\d进行分割，那么返回的数组里第一和最后一个都是空串""
separator	必需。字符串或正则表达式，从该参数指定的地方分割 str。
howmany	可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。
如果separator是个""，那么每个字符都被分割

indexOf(substr,index) 不支持正则   没有子串都返回-1
lastIndexOf(substr,index) 子串最后一次出现的位置，是从后往前检索,加上index，那就是从index开始往前检索，找到的第一个匹配项，返回他的下标。没有index，那就是从最后开始往前检索

如果substring和substr都省略第二个参数的话，那么它们此时会返回一样的子串
substring(begin,end) 包括begin不包括end
substr(begin,length) 从bengin开始往后截取length个字符，包括begin





类似replace,substring,substr,toUpperCase,toLowerCase都是返回的副本，不会在原字符串本身上做改变


ES6之前只支持单行字符串，ES6开始支持多行字符串
例：var str = `hello
	       world`;   注：单行字符串用''  ;   多行字符串用``


字符串中的占位符:${var}
var linkURL = "http://www.baidu.com";
var linkName = '百度一下';
var str = `<a href="${linkURL}">${linkName}</a>`;  注:包围的须是``


getMonth()返回的是0到11,需要加1   
月份从0到11  日从1到31   
Date日期对象，有四个构造函数
new Date() 当前系统的日期时间
new Date(时间戳)
new Date(日期字符串)
new Date(year,month,day,hour,minute,second,mileseconds) 除了year和month是必传的外，其它可选，day默认为1W
用时间戳可以消除时区带来的影响


