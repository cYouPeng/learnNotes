一，阶乘函数（1*2*3*…*n的值)
	1，循环
		function sum(x){
		  let res = 1;
		  for(let i=2; i<=x; i++){
			res *= i;
		  }
		  return res
		}
		console.log(sum(5))
		i=2: 1*2的值赋给res
		i=3: 1*2*3的值赋给res
		i=4: 1*2*3*4的值赋给res
		i=5: 1*2*3*4*5的值赋给res
		
	2，递归
		function sum(x){
		  if(x == 1){
			return 1
		  }
		  return x * sum(x -1)
		}
		console.log(sum(5))
		第一次：5*sum(4) 等待，执行sum(4)
		第二次：4*sum(3) 等待，执行sum(3)
		第三次：3*sum(2) 等待，执行sum(2)
		第四次：2*sum(1) 不等待，返回2
		sum(2)有了结果，执行sum(3) 1*2*3
		sum(3)有了结果，执行sum(4) 1*2*3*4
		sum(4)有了结果，执行sum(5) 1*2*3*4*5
		
	let num = 234;
    console.log(num % 10)					//个位上数字 4
    console.log(parseInt((num%100)/10))		//十位上数字 3
    console.log(parseInt(num/100))			//百位上数字 2
	
	let num = 2345;							
    console.log(num % 10)					//个位上数字 5	   个位上的数字都是模以10
    console.log(parseInt((num%100)/10))		//十位上数字 4     模以100取得45，之后再除以10取得4.5 利用parseInt()取得4
    console.log(parseInt(num%1000/100))		//百位上数字 3	   模以1000取得345，之后再除以100取得3.45，利用parseInt()取得3
    console.log(parseInt(num/1000))			//千位上数字 2
	
二，求一个数字各个位数上的数字的和:  123   --->6 ---1+2+3
	function sum(x){
      if(x < 10){
        return x
      }
      return x%10 + sum(parseInt(x/10))
    }
    console.log(sum(1364))	 //14
	第一次：取1364最后一位4 + sum(136) 等待，执行sum(136)
	第二次：取136最后一位6 + sum(13) 等待，执行sum(13)
	第三次：取13最后一位3 + sum(1) 不等待，返回4
	sum(13)有了结果，执行 1+3+6
	sum(136)有了结果，执行 1+3+6+4
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	